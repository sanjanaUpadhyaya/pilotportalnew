<%- include('./reusable/member_reusable') %>
<!DOCTYPE html>
<html lang="en">
<>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"> </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
  

  <title>Infinity Drones Pilot Portal</title>
  <script>
    var link = document.querySelector("link[rel~='icon']");
    if (!link) {
      link = document.createElement('link');
      link.rel = 'icon';
      document.head.appendChild(link);
    }
    link.href = 'https://i.imgur.com/4KBcfHV.png'; 
  </script>
 <style>
    
 
    /* Fixed top navigation bar */
    
    /* Main content area */
    .content {
      /*padding-top: 50px;  Adjust this value based on the height of the top navigation bar */
      display: flex;
      justify-content: center;
      align-items: center;
      height: 10vh;
      margin-top: 0px;
     float: right;
     font-family: 'Montserrat';
    color: #5C5992;
    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
      
    }
    
    /* Chart styles */
    .chart-container {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 1500px;
      height: 800px;
      margin-left: 300px;
      margin-bottom: 50px;
      margin-top: 50px;
      /* Add margin-top to create space between the charts */
    }

    /* Some media queries for responsiveness */
    @media screen and (max-height: 450px) {
      .sidenav {
        padding-top: 15px;
      }
    }
    body { background-color:#f0f0f0; }
    /* Define styles for the content area */
    .content {
      margin-left: 250px; /* Adjust the margin to match the sidebar width */
      padding: 20px;
      transition: 0.5s;
      text-align: right;
      font-weight: bold;
     
      font-size:40px;
      font-family: 'Montserrat';
          
           
            color: #5C5992;
            text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
      
    }
    
    .success {
      margin-left: 250px;
      font-weight: bold;
    }
    input[type=number] {
      margin-left: 50px;
      display: inline-block;
      border: none;
      background: none;
      font-weight: bold;
      font-size: 30px;
      margin-top: 20px;
      
    }

    #chartContainer {
      margin-top: 50px;
    }
    .btn{
        background-color:#f6f0e6;
        color: rgb(16, 16, 16);
        padding: 10px;
        font-size: 16px;
        border-color: black;
        border-radius: 25px;
        width: 100px;
        margin-left: 20%;
        float: right;
        width: 150px;
    }
   
    h1{
      font-size: 25px;
      font-family: 'Montserrat';
          
           
          color: #5C5992;
          text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
          margin-left:145px;
    }

    h3{
      font-size: 25px;
      font-family: 'Montserrat';
          
           
          color: #5C5992;
          text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
          margin-left:75px;
          padding-left: 180px;
    }
    .chart-container1 {
      width: 30%;
      margin-bottom: 200px;
      padding: 20px;
      background-color: white;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-left:350px;
      border-radius: 20px;
      height: 400px;
    }
    .chart-container2 {
      width: 30%;
      margin-top: -600px;
      padding: 20px;
      background-color: white;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-left:800px;
      border-radius: 20px;
      height: 400px;
    }
    .chart-container3 {
      width: 30%;
      margin-top:50px;
      margin-bottom: 30px;
      padding: 20px;
      background-color: white;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-left:350px;
      border-radius: 20px;
      height: 350px;
    }


    .chart-container4 {
      width: 30%;
      height:350px;
      margin-top: -380px;
      margin-bottom: 30px;
      padding: 20px;
      background-color: white;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-left:800px;
      border-radius: 20px;
    }

    .chart-container5 {
      width: 30%;
      margin-top:30px;
      margin-bottom: 30px;
      padding: 20px;
      background-color: white;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      margin-left:350px;
      border-radius: 20px;
      height: 350px;
    }

    button[type='submit'] {
            display: inline-block;
            padding: 8px 16px;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease-in-out;
            width:100px;
            background: #5C5992;
            border: 3px solid #F5F5F5;
            box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
            border-radius: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-left: 50%;
            
        }

        button[type="submit"]:hover {
            background-color: rgba(217, 217, 217, 0.17);
        }





</style>
</head>
<body>
    
  
    <!-- Content Area -->
  <div class="content" id="content">
   
  </div><br><br><br><br>

  <br>
  <div id='div-element-id'>
  <div class="success">
    <label for="successful"><h1>Successful flights of the day:</h1></label>
    <input type="number" id="successful" name="successful" style="color:rgba(92, 89, 146, 1);" value="<%-successful%>" readonly>
    <label for="crashes"><h3>Crashes of the day:</h3></label>
    <input type="number" id="crashes" name="crashes" style="color:rgba(92, 89, 146, 1)" value="<%- crashes %>" readonly>
  </div><br><br>

  <div class="card">
    <!-- successful flight n crashes -->
    <div class="chart-container1"> 
      <canvas id="chart1"></canvas>
    </div>
  </div>
  <div class="card">
    <!-- damaged item graph -->
    <div class="chart-container2">
      <canvas id="chart2"></canvas>
    </div>
  </div>


  <div class="card">
    <!-- total flight time -->
    <div class="chart-container3">
      <canvas id="chart3"></canvas>
    </div>
  </div>

  
  <div class="card">
    <!-- battery usage -->
    <div class="chart-container4">
      <canvas id="chart4"></canvas>
    </div>
  </div>

  <div class="card">
    <!-- simulation -->
    <div class="chart-container5">
      <canvas id="chart5"></canvas>
    </div>
  </div>
</div>

<!-- button to generate the report -->
  <div id="reportopt">  
    <button   id="reportbtn"  type="submit" onclick="generatepdf()" value="download"> Check Report </button>
  </div>

  <!-- <script >
async function generatePDF() {
        const { jsPDF } = window.jspdf;

        const divElement = document.getElementById('div-element-id'); // Replace with your div element ID

        html2canvas(divElement).then(canvas => {
            const imgData = canvas.toDataURL('image/png');
            
            const doc = new jsPDF();

            const imgWidth = 200; 
            const imgHeight = (canvas.height * imgWidth) / canvas.width; // Maintain aspect ratio
            doc.addImage(imgData, 'PNG', -30, 30, imgWidth, imgHeight);

            // Save the PDF
            doc.save('flight_result.pdf');
        });
    }      
</script>  -->

  <script>
    var trueCount = `<%= trueCount || 0 %>`;
var falseCount = `<%= falseCount || 0 %>`;

function generatepdf() {
      window.location.href = '/pdftemplate';
    }

console.log("True Count:", trueCount);
console.log("False Count:", falseCount);

var ctx = document.getElementById('chart1').getContext('2d');
var barChart = new Chart(ctx, {
  type: 'bar',
  data: {
    labels: ['Successful flights', 'Crashes'],
    datasets: [{
      data: [trueCount, falseCount],
      backgroundColor: ['rgba(162, 158, 225, 0.5)', 'rgba(162, 158, 225, 0.5)'],
      borderWidth: 1
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      y: {
        beginAtZero: true
      }
    },
    plugins: {
      legend: {
        display: false // Hide the legend
      },
      title: {
        display: true,
        text: 'FLIGHT RESULT',
        font: {
          weight: 'bold',
          size: 20,
          family: 'Montserrat'
        }
      },
      datalabels: {
        anchor: 'end',
        align: 'top',
        color: '#5C5992',
        font: {
          weight: 'bold',
          size: 16,
          family: 'Montserrat'
        },
        formatter: function(value) {
          return value === 0 ? '' : value;
        }
      }
    }
  }
});



const data2 = JSON.parse('<%- JSON.stringify(data2) %>'); 

const labels2 = data2.map(item => item.label);
const values2= data2.map(item => item.value);

const ctx2 = document.getElementById('chart2').getContext('2d');
new Chart(ctx2, {
  type: 'pie',
  data: {
    labels: labels2,
    datasets: [{
      data: values2,
      backgroundColor: [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(0, 255, 1, 0.1)',
        'rgba(255, 0, 0, 0.1)',
      ],
      borderColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(0, 0, 255, 0.5)',
        'rgba(0, 255, 0, 1)',
      ],
      borderWidth: 1
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
        title: {
        display: true,
        text: 'DAMAGED ITEMS COST',
        font: {
          weight: 'bold',
          size: 20,
          family: 'Montserrat'
        }
      },
      datalabels: {
        color: '#000',
        font: {
          weight: 'bold',
          family: 'Montserrat'
        },
        formatter: (value, context) => {
          const label = context.chart.data.labels[context.dataIndex];
          return `${label}: ${value}`;
        }
      }
    }
  }
});

const data3 = JSON.parse('<%- JSON.stringify(data3) %>'); 

const labels3 = data3.map(item => item.label);
    const values3 = data3.map(item => item.value);

    const ctx3 = document.getElementById('chart3').getContext('2d');
new Chart(ctx3, {
  type: 'bar',
  data: {
    labels: labels3,
    datasets: [{
      data: values3,
      backgroundColor: ' rgba(203, 202, 225, 0.5)',
      borderColor: ' rgba(92, 89, 146, 1)',
      borderWidth: 1
    }]
  },
  options: {
    plugins: {
      title: {
        display: true,
        text: 'FLYING DETAILS',
        font: {
          weight: 'bold',
          size: 20,
          family: 'Montserrat'
        }
      },
      legend: {
        display: false
      }
    },
    scales: {
      x: {
        title: {
          display: true,
          text: 'TYPE OF DRONE',
          font: {
            weight: 'bold',
            size: 12,
            family: 'Montserrat'
          }
        }
      },
      y: {
        title: {
          display: true,
          text: 'FLYING TIME IN MINUTES',
          font: {
            weight: 'bold',
            size: 12,
            family: 'Montserrat'
          }
        },
        beginAtZero: true
      }
    }
  }
});


const data4 = JSON.parse('<%- JSON.stringify(data4) %>'); // Parse the JSON data for chart3

const labels4 = data4.map(item => item.label);
const values4 = data4.map(item => item.value);

const ctx4 = document.getElementById('chart4').getContext('2d');
new Chart(ctx4, {
  type: 'pie',
  data: {
    labels: labels4,
    datasets: [{
      data: values4,
      backgroundColor: [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(0, 255, 1, 0.1)',
        'rgba(255, 0, 0, 0.1)',
      ],
      borderColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(0, 0, 255, 0.5)',
        'rgba(0, 255, 0, 1)',
      ],
      borderWidth: 1
    }]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
        title: {
        display: true,
        text: 'BATTERY USAGE',
        font: {
          weight: 'bold',
          size: 20,
          family: 'Montserrat'
        }
      },
      datalabels: {
        color: '#000',
        font: {
          weight: 'bold',
          family: 'Montserrat'
        },
        formatter: (value, context) => {
          const label = context.chart.data.labels[context.dataIndex];
          return `${label}: ${value}`;
        }
      }
    }
  }
});
const data5= JSON.parse('<%- JSON.stringify(data5) %>'); // Parse the JSON data for chart1
  
  const labels5 = data5.map(item => item.label);
  const values5 = data5.map(item => item.value);
  
  const ctx5 = document.getElementById('chart5').getContext('2d');
  new Chart(ctx5, {
    type: 'line',
    data: {
      labels: labels5,
      datasets: [{
       
        data: values5,
        backgroundColor: 'rgba(0, 255, 1, 0.1)',
        borderColor: 'rgba(0, 255, 0, 1)',
        borderWidth: 1
      }]
    },
    options: {
      plugins: {
        title: {
          display: true,
          text: 'SIMULATION DETAILS',
          font: {
            weight: 'bold',
            size: 20,
            family: 'Montserrat'
          }
        },
        legend: {
          display: false
        }
      },
      scales: {
        x: {
          title: {
            display: true,
            text: 'PILOT',
            font: {
              weight: 'bold',
              size: 12,
              family: 'Montserrat'
            }
          }
        },
        y: {
          title: {
            display: true,
            text: 'TIME(minutes)',
            font: {
              weight: 'bold',
              size: 12,
              family: 'Montserrat',
              stepSize: 50
            }
          },
          beginAtZero: true          
        }
      }
    }
  });




    
    </script>

 
</body>
</html>